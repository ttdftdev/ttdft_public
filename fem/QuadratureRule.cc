/******************************************************************************
 * Copyright (c) 2020-2021.                                                   *
 * The Regents of the University of Michigan and TTDFT authors.               *
 *                                                                            *
 * This file is part of the TTDFT code.                                       *
 *                                                                            *
 * TTDFT is free software: you can redistribute it and/or modify              *
 *  it under the terms of the Lesser GNU General Public License as            *
 *  published by the Free Software Foundation, either version 3 of            *
 *  the License, or (at your option) any later version.                       *
 *                                                                            *
 *  TTDFT is distributed in the hope that it will be useful, but              *
 *  WITHOUT ANY WARRANTY; without even the implied warranty                   *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                      *
 *  See the Lesser GNU General Public License for more details.               *
 *                                                                            *
 * You should have received a copy of the GNU Lesser General Public           *
 * License at the top level of TTDFT distribution.  If not, see               *
 * <https://www.gnu.org/licenses/>.                                           *
 ******************************************************************************/

#include "QuadratureRule.h"
#include <cmath>

QuadratureRule::QuadratureRule(const std::string &quadRule) {
    if (quadRule.compare("2pt") == 0) {
        numberQuadPoints = 2;
        double points[2] = {-0.57735026918962576450914878050196,
                            0.57735026918962576450914878050196};
        double weights[2] = {1.0,
                             1.0};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("3pt") == 0) {
        numberQuadPoints = 3;
        double points[3] = {-0.77459666924148337703585307995648,
                            0,
                            0.77459666924148337703585307995648};
        double weights[3] = {0.55555555555555555555555555555556,
                             0.88888888888888888888888888888889,
                             0.55555555555555555555555555555556};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("4pt") == 0) {
        numberQuadPoints = 4;
        double points[4] = {-0.86113631159405257522394648889281,
                            -0.33998104358485626480266575910324,
                            0.33998104358485626480266575910324,
                            0.86113631159405257522394648889281};
        double weights[4] = {0.347854845137453857373063949222,
                             0.652145154862546142626936050778,
                             0.652145154862546142626936050778,
                             0.347854845137453857373063949222};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("5pt") == 0) {
        numberQuadPoints = 5;
        double points[5] = {-0.90617984593866399279762687829939,
                            -0.53846931010568309103631442070021,
                            0,
                            0.53846931010568309103631442070021,
                            0.90617984593866399279762687829939};
        double weights[] = {0.23692688505618908751426404071992,
                            0.47862867049936646804129151483564,
                            0.56888888888888888888888888888889,
                            0.47862867049936646804129151483564,
                            0.23692688505618908751426404071992};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("6pt") == 0) {
        numberQuadPoints = 6;
        double points[6] = {-0.93246951420315202781230155449399,
                            -0.66120938646626451366139959501991,
                            -0.23861918608319690863050172168071,
                            0.23861918608319690863050172168071,
                            0.66120938646626451366139959501991,
                            0.93246951420315202781230155449399};
        double weights[6] = {0.17132449237917034504029614217273,
                             0.36076157304813860756983351383772,
                             0.46791393457269104738987034398955,
                             0.46791393457269104738987034398955,
                             0.36076157304813860756983351383772,
                             0.17132449237917034504029614217273};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("7pt") == 0) {
        numberQuadPoints = 7;
        double points[7] = {-0.94910791234275852452618968404785,
                            -0.74153118559939443986386477328079,
                            -0.40584515137739716690660641207696,
                            0,
                            0.40584515137739716690660641207696,
                            0.74153118559939443986386477328079,
                            0.94910791234275852452618968404785};
        double weights[7] = {0.12948496616886969327061143267908,
                             0.27970539148927666790146777142378,
                             0.38183005050511894495036977548898,
                             0.41795918367346938775510204081633,
                             0.38183005050511894495036977548898,
                             0.27970539148927666790146777142378,
                             0.12948496616886969327061143267908};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("8pt") == 0) {
        numberQuadPoints = 8;
        double points[8] = {-0.96028985649753623168356086856947,
                            -0.79666647741362673959155393647583,
                            -0.52553240991632898581773904918925,
                            -0.18343464249564980493947614236018,
                            0.18343464249564980493947614236018,
                            0.52553240991632898581773904918925,
                            0.79666647741362673959155393647583,
                            0.96028985649753623168356086856947};
        double weights[8] = {0.10122853629037625915253135430996,
                             0.22238103445337447054435599442624,
                             0.3137066458778872873379622019866,
                             0.3626837833783619829651504492772,
                             0.3626837833783619829651504492772,
                             0.3137066458778872873379622019866,
                             0.22238103445337447054435599442624,
                             0.10122853629037625915253135430996};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("9pt") == 0) {
        numberQuadPoints = 9;
        double points[9] = {0.0000000000000000,
                            -0.8360311073266358,
                            0.8360311073266358,
                            -0.9681602395076261,
                            0.9681602395076261,
                            -0.3242534234038089,
                            0.3242534234038089,
                            -0.6133714327005904,
                            0.6133714327005904};
        double weights[9] = {0.3302393550012598,
                             0.1806481606948574,
                             0.1806481606948574,
                             0.0812743883615744,
                             0.0812743883615744,
                             0.3123470770400029,
                             0.3123470770400029,
                             0.2606106964029354,
                             0.2606106964029354};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("10pt") == 0) {
        numberQuadPoints = 10;
        double points[10] = {-0.1488743389816312,
                             0.1488743389816312,
                             -0.4333953941292472,
                             0.4333953941292472,
                             -0.6794095682990244,
                             0.6794095682990244,
                             -0.8650633666889845,
                             0.8650633666889845,
                             -0.9739065285171717,
                             0.9739065285171717};
        double weights[10] = {0.2955242247147529,
                              0.2955242247147529,
                              0.2692667193099963,
                              0.2692667193099963,
                              0.2190863625159820,
                              0.2190863625159820,
                              0.1494513491505806,
                              0.1494513491505806,
                              0.0666713443086881,
                              0.0666713443086881};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("11pt") == 0) {
        numberQuadPoints = 11;
        double points[11] = {0.0000000000000000,
                             -0.2695431559523450,
                             0.2695431559523450,
                             -0.5190961292068118,
                             0.5190961292068118,
                             -0.7301520055740494,
                             0.7301520055740494,
                             -0.8870625997680953,
                             0.8870625997680953,
                             -0.9782286581460570,
                             0.9782286581460570};
        double weights[11] = {0.2729250867779006,
                              0.2628045445102467,
                              0.2628045445102467,
                              0.2331937645919905,
                              0.2331937645919905,
                              0.1862902109277343,
                              0.1862902109277343,
                              0.1255803694649046,
                              0.1255803694649046,
                              0.0556685671161737,
                              0.0556685671161737};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("12pt") == 0) {
        numberQuadPoints = 12;
        double points[12] = {-0.1252334085114689,
                             0.1252334085114689,
                             -0.3678314989981802,
                             0.3678314989981802,
                             -0.5873179542866175,
                             0.5873179542866175,
                             -0.7699026741943047,
                             0.7699026741943047,
                             -0.9041172563704749,
                             0.9041172563704749,
                             -0.9815606342467192,
                             0.9815606342467192};
        double weights[12] = {0.2491470458134028,
                              0.2491470458134028,
                              0.2334925365383548,
                              0.2334925365383548,
                              0.2031674267230659,
                              0.2031674267230659,
                              0.1600783285433462,
                              0.1600783285433462,
                              0.1069393259953184,
                              0.1069393259953184,
                              0.0471753363865118,
                              0.0471753363865118};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("13pt") == 0) {
        numberQuadPoints = 13;
        double points[13] = {0.0000000000000000,
                             -0.2304583159551348,
                             0.2304583159551348,
                             -0.4484927510364469,
                             0.4484927510364469,
                             -0.6423493394403402,
                             0.6423493394403402,
                             -0.8015780907333099,
                             0.8015780907333099,
                             -0.9175983992229779,
                             0.9175983992229779,
                             -0.9841830547185881,
                             0.9841830547185881};
        double weights[13] = {0.2325515532308739,
                              0.2262831802628972,
                              0.2262831802628972,
                              0.2078160475368885,
                              0.2078160475368885,
                              0.1781459807619457,
                              0.1781459807619457,
                              0.1388735102197872,
                              0.1388735102197872,
                              0.0921214998377285,
                              0.0921214998377285,
                              0.0404840047653159,
                              0.0404840047653159};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("14pt") == 0) {
        numberQuadPoints = 14;
        double points[14] = {-0.1080549487073437,
                             0.1080549487073437,
                             -0.3191123689278897,
                             0.3191123689278897,
                             -0.5152486363581541,
                             0.5152486363581541,
                             -0.6872929048116855,
                             0.6872929048116855,
                             -0.8272013150697650,
                             0.8272013150697650,
                             -0.9284348836635735,
                             0.9284348836635735,
                             -0.9862838086968123,
                             0.9862838086968123};
        double weights[14] = {0.2152638534631578,
                              0.2152638534631578,
                              0.2051984637212956,
                              0.2051984637212956,
                              0.1855383974779378,
                              0.1855383974779378,
                              0.1572031671581935,
                              0.1572031671581935,
                              0.1215185706879032,
                              0.1215185706879032,
                              0.0801580871597602,
                              0.0801580871597602,
                              0.0351194603317519,
                              0.0351194603317519};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("15pt") == 0) {
        numberQuadPoints = 15;
        double points[15] = {0,
                             -0.201194093997434,
                             0.201194093997434,
                             -0.394151347077563,
                             0.394151347077563,
                             -0.570972172608539,
                             0.570972172608539,
                             -0.724417731360170,
                             0.724417731360170,
                             -0.848206583410427,
                             0.848206583410427,
                             -0.937273392400706,
                             0.937273392400706,
                             -0.987992518020485,
                             0.987992518020485};
        double weights[15] = {0.202578241925561,
                              0.198431485327112,
                              0.198431485327112,
                              0.186161000015562,
                              0.186161000015562,
                              0.166269205816994,
                              0.166269205816994,
                              0.139570677926154,
                              0.139570677926154,
                              0.107159220467172,
                              0.107159220467172,
                              0.070366047488108,
                              0.070366047488108,
                              0.030753241996117,
                              0.030753241996117};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("16pt") == 0) {
        numberQuadPoints = 16;
        double points[16] = {0.9894009349916499,
                             0.9445750230732326,
                             0.8656312023878319,
                             0.7554044083550031,
                             0.6178762444026438,
                             0.4580167776572273,
                             0.2816035507792589,
                             0.0950125098376375,
                             -0.0950125098376375,
                             -0.2816035507792589,
                             -0.4580167776572273,
                             -0.6178762444026438,
                             -0.7554044083550031,
                             -0.8656312023878319,
                             -0.9445750230732326,
                             -0.9894009349916499};
        double weights[16] = {0.0271524594117541,
                              0.0622535239386478,
                              0.0951585116824929,
                              0.1246289712555339,
                              0.1495959888165768,
                              0.1691565193950026,
                              0.1826034150449236,
                              0.1894506104550684,
                              0.1894506104550684,
                              0.1826034150449236,
                              0.1691565193950026,
                              0.1495959888165768,
                              0.1246289712555339,
                              0.0951585116824929,
                              0.0622535239386478,
                              0.0271524594117541};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("17pt") == 0) {
        numberQuadPoints = 17;
        double points[17] = {0.9905754753144174,
                             0.9506755217687677,
                             0.8802391537269858,
                             0.7815140038968014,
                             0.6576711592166906,
                             0.5126905370864769,
                             0.3512317634538764,
                             0.1784841814958478,
                             0.0000000000000000,
                             -0.1784841814958478,
                             -0.3512317634538764,
                             -0.5126905370864769,
                             -0.6576711592166906,
                             -0.7815140038968014,
                             -0.8802391537269858,
                             -0.9506755217687677,
                             -0.9905754753144174};
        double weights[17] = {0.0241483028685479,
                              0.0554595293739871,
                              0.0850361483171792,
                              0.1118838471934039,
                              0.1351363684685254,
                              0.1540457610768104,
                              0.1680041021564499,
                              0.1765627053669926,
                              0.1794464703562065,
                              0.1765627053669926,
                              0.1680041021564499,
                              0.1540457610768104,
                              0.1351363684685254,
                              0.1118838471934039,
                              0.0850361483171792,
                              0.0554595293739871,
                              0.0241483028685479};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("18pt") == 0) {
        numberQuadPoints = 18;
        double points[18] = {0.9915651684209310,
                             0.9558239495713976,
                             0.8926024664975558,
                             0.8037049589725231,
                             0.6916870430603532,
                             0.5597708310739475,
                             0.4117511614628426,
                             0.2518862256915055,
                             0.0847750130417353,
                             -0.0847750130417353,
                             -0.2518862256915055,
                             -0.4117511614628426,
                             -0.5597708310739475,
                             -0.6916870430603532,
                             -0.8037049589725231,
                             -0.8926024664975558,
                             -0.9558239495713976,
                             -0.9915651684209310};
        double weights[18] = {0.0216160135264834,
                              0.0497145488949693,
                              0.0764257302548889,
                              0.1009420441062870,
                              0.1225552067114783,
                              0.1406429146706506,
                              0.1546846751262654,
                              0.1642764837458327,
                              0.1691423829631435,
                              0.1691423829631435,
                              0.1642764837458327,
                              0.1546846751262654,
                              0.1406429146706506,
                              0.1225552067114783,
                              0.1009420441062870,
                              0.0764257302548889,
                              0.0497145488949693,
                              0.0216160135264834};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("19pt") == 0) {
        numberQuadPoints = 19;
        double points[19] = {0.9924068438435842,
                             0.9602081521348300,
                             0.9031559036148180,
                             0.8227146565371428,
                             0.7209661773352294,
                             0.6005453046616811,
                             0.4645707413759610,
                             0.3165640999636299,
                             0.1603586456402253,
                             0.0000000000000000,
                             -0.1603586456402253,
                             -0.3165640999636299,
                             -0.4645707413759610,
                             -0.6005453046616811,
                             -0.7209661773352294,
                             -0.8227146565371428,
                             -0.9031559036148180,
                             -0.9602081521348300,
                             -0.9924068438435842};
        double weights[19] = {0.0194617882297264,
                              0.0448142267656994,
                              0.0690445427376411,
                              0.0914900216224499,
                              0.1115666455473340,
                              0.1287539625393363,
                              0.1426067021736067,
                              0.1527660420658597,
                              0.1589688433939544,
                              0.1610544498487837,
                              0.1589688433939544,
                              0.1527660420658597,
                              0.1426067021736067,
                              0.1287539625393363,
                              0.1115666455473340,
                              0.0914900216224499,
                              0.0690445427376411,
                              0.0448142267656994,
                              0.0194617882297264};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    } else if (quadRule.compare("20pt") == 0) {
        numberQuadPoints = 20;
        double points[20] = {0.9931285991850949,
                             0.9639719272779139,
                             0.9122344282513259,
                             0.8391169718222189,
                             0.7463319064601508,
                             0.6360536807265151,
                             0.5108670019508272,
                             0.3737060887154195,
                             0.2277858511416451,
                             0.0765265211334973,
                             -0.0765265211334973,
                             -0.2277858511416451,
                             -0.3737060887154195,
                             -0.5108670019508272,
                             -0.6360536807265151,
                             -0.7463319064601508,
                             -0.8391169718222189,
                             -0.9122344282513259,
                             -0.9639719272779139,
                             -0.9931285991850949};
        double weights[20] = {0.0176140071391517,
                              0.0406014298003870,
                              0.0626720483341090,
                              0.0832767415767048,
                              0.1019301198172405,
                              0.1181945319615183,
                              0.1316886384491766,
                              0.1420961093183822,
                              0.1491729864726038,
                              0.1527533871307260,
                              0.1527533871307260,
                              0.1491729864726038,
                              0.1420961093183822,
                              0.1316886384491766,
                              0.1181945319615183,
                              0.1019301198172405,
                              0.0832767415767048,
                              0.0626720483341090,
                              0.0406014298003870,
                              0.0176140071391517};
        for (unsigned i = 0; i < numberQuadPoints; ++i) {
            quadPoints.push_back(points[i]);
            quadWeights.push_back(weights[i]);
        }
    }
}

double QuadratureRule::getNumberQuadPoints() const {
    return numberQuadPoints;
}

std::vector<double> QuadratureRule::getQuadraturePoints() const {
    return quadPoints;
}

std::vector<double> QuadratureRule::getQuadratureWeights() const {
    return quadWeights;
}

QuadratureRule::QuadratureRule(const QuadratureRule &quadRule) {
    numberQuadPoints = quadRule.numberQuadPoints;
    quadPoints = quadRule.quadPoints;
    quadWeights = quadRule.quadWeights;
}

QuadratureRule &QuadratureRule::operator=(const QuadratureRule &quadRule) {
    numberQuadPoints = quadRule.numberQuadPoints;
    quadPoints = quadRule.quadPoints;
    quadWeights = quadRule.quadWeights;
    return *this;
}
